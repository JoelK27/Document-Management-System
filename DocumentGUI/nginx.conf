events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html FrontPage.html;

        # Hauptseite
        location = / {
            try_files /FrontPage.html =404;
        }

        # HTML-Dateien (flache Struktur)
        location = /FrontPage.html {
            try_files $uri =404;
        }

        location = /DocumentDetail.html {
            try_files $uri =404;
        }

        location = /404.html {
            try_files $uri =404;
        }

        # JavaScript-Dateien mit korrektem MIME-Type
        location ~* \.js$ {
            add_header Content-Type "application/javascript; charset=utf-8";
            try_files $uri =404;
        }

        # CSS-Dateien
        location ~* \.css$ {
            add_header Content-Type "text/css; charset=utf-8";
            try_files $uri =404;
        }

        # API Proxy
        location /api/ {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain; charset=utf-8";
                add_header Content-Length 0;
                return 204;
            }

            proxy_pass http://backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
        }

        # Statische Assets
        location ~* \.(png|jpg|jpeg|gif|ico|svg)$ {
            expires 1h;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Custom 404 Error Page
        error_page 404 /404.html;

        # Fallback f√ºr alle anderen Requests
        location / {
            try_files $uri $uri/ /FrontPage.html;
        }
    }
}